@model BaseApplication.Models.TridentClientModel

@{
    ViewData["Title"] = "DeleteClient";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>DeleteClient</h1>

<h3>Are you sure you want to delete this?</h3>
<div>
    <h4>TridentClientModel</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Email)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Email)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Phone)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Phone)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.AlternatePhone)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.AlternatePhone)
        </dd>
       @*  <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.CoordinatorId)
        </dt> *@
        @* <dd class="col-sm-10">
            @if (Model.CoordinatorId > 0)
            {
                List<SelectListItem> selectListItems = ViewBag.Coordinators;
                var pointofContacts = selectListItems?.Select(x => new SelectListItem { Text = x.Text, Value = x.Value.ToString() }).ToList();

                if (pointofContacts != null && pointofContacts.Any())
                {
                    var matchingContacts = pointofContacts.Where(x => x.Value == Model.CoordinatorId.ToString()).ToList();
                    <text>@(matchingContacts.Count > 0 ? matchingContacts[0].Text : "No matching contacts found.")</text>
                }
            }
        </dd> *@
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Status)
        </dt>
        <dd class="col-sm-10">
            @if (Model.Status == true)
            {
                <text>Active</text>
            }
            else
            {
                <text>InActive</text>
            }
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.ZipCode)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.ZipCode)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.State)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.State)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.City)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.City)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Address1)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Address1)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Notes)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Notes)
        </dd>
    </dl>
    
    <form asp-action="DeleteClient">
        <input type="hidden" asp-for="Id" />
        <input type="submit" value="Delete" class="btn btn-danger" /> |
        <a asp-action="ClientList">Back to List</a>
    </form>
</div>
